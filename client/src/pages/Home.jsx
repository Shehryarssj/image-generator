import React, { useEffect, useState } from "react";
import { Card, Loader, FormField } from "../components";

const BASE_URL = "https://image-generator-lime.vercel.app";

function RenderCards({ data, title }) {
  if (data && data.length !== 0) {
    return data.map((post) => {
      return <Card key={post._id} {...post} />;
    });
  }
  return (
    <h2 className="mt-5 font-bold text-xl-uppercase text-[#6449ff]">{title}</h2>
  );
}

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setsearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch(BASE_URL + "/api/v1/post", {
          methos: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        const result = await response.json();
        if (response.ok) {
          setAllPosts(result.data.reverse());
        } else {
          throw response.message;
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setsearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[40px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[20px] max-w[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by <strong>DALL-E AI</strong>
        </p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search Posts"
          type="text"
          name="text"
          placeholder="Search Posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center"></div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-xl mb-3 text-[#666e75]">
                Showing results for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 cs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
}
